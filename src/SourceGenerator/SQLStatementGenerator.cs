using System;
using System.Linq;
using System.IO;
using System.Text;
using Microsoft.CodeAnalysis;
using Microsoft.CodeAnalysis.Text;

[Generator(LanguageNames.CSharp)]
public class SQLStatementGenerator : IIncrementalGenerator
{
  /*
  public void Execute(GeneratorExecutionContext context)
  {
    // 1. Lookup SQLAttribute in the assembly
    var attributes = context.Compilation.Assembly.GetAttributes();
    attributes.Select(attribute =>
    {
      //attribute.NamedArguments
      return attribute;
    });
    string source = $@"
// <auto-generated />
using System;
namespace USSoftworks.Pillr;
{{
  public partial class CreatePillrDb : Microsoft.Build.Utilities.Task
  {{
    public string CreateDbSql => ""<SQL STATEMENT>"";
  }}
}}
";

    // 2. Add 
    //context.AddSource(sourceStream, Encoding.ASCII, SourceHashAlgorithm.None, true);
    context.AddSource("CreatePillrDb.g.cs", source);
  }
  */

  public void Initialize(IncrementalGeneratorInitializationContext context)
  {
  }
}
